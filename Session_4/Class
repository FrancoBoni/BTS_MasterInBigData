{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "*** Introductory Examples for the NLTK Book ***\n",
      "Loading text1, ..., text9 and sent1, ..., sent9\n",
      "Type the name of the text or sentence to view it.\n",
      "Type: 'texts()' or 'sents()' to list the materials.\n",
      "text1: Moby Dick by Herman Melville 1851\n",
      "text2: Sense and Sensibility by Jane Austen 1811\n",
      "text3: The Book of Genesis\n",
      "text4: Inaugural Address Corpus\n",
      "text5: Chat Corpus\n",
      "text6: Monty Python and the Holy Grail\n",
      "text7: Wall Street Journal\n",
      "text8: Personals Corpus\n",
      "text9: The Man Who Was Thursday by G . K . Chesterton 1908\n"
     ]
    }
   ],
   "source": [
    "from nltk.book import *"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Text: Moby Dick by Herman Melville 1851>"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "text1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Displaying 11 of 11 matches:\n",
      "ong the former , one was of a most monstrous size . ... This came towards us , \n",
      "ON OF THE PSALMS . \" Touching that monstrous bulk of the whale or ork we have r\n",
      "ll over with a heathenish array of monstrous clubs and spears . Some were thick\n",
      "d as you gazed , and wondered what monstrous cannibal and savage could ever hav\n",
      "that has survived the flood ; most monstrous and most mountainous ! That Himmal\n",
      "they might scout at Moby Dick as a monstrous fable , or still worse and more de\n",
      "th of Radney .'\" CHAPTER 55 Of the Monstrous Pictures of Whales . I shall ere l\n",
      "ing Scenes . In connexion with the monstrous pictures of whales , I am strongly\n",
      "ere to enter upon those still more monstrous stories of them which are to be fo\n",
      "ght have been rummaged out of this monstrous cabinet there is no telling . But \n",
      "of Whale - Bones ; for Whales of a monstrous size are oftentimes cast up dead u\n"
     ]
    }
   ],
   "source": [
    "text1.concordance(\"monstrous\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Displaying 25 of 1226 matches:\n",
      "s , and to teach them by what name a whale - fish is to be called in our tongue\n",
      "t which is not true .\" -- HACKLUYT \" WHALE . ... Sw . and Dan . HVAL . This ani\n",
      "ulted .\" -- WEBSTER ' S DICTIONARY \" WHALE . ... It is more immediately from th\n",
      "ISH . WAL , DUTCH . HWAL , SWEDISH . WHALE , ICELANDIC . WHALE , ENGLISH . BALE\n",
      "HWAL , SWEDISH . WHALE , ICELANDIC . WHALE , ENGLISH . BALEINE , FRENCH . BALLE\n",
      "least , take the higgledy - piggledy whale statements , however authentic , in \n",
      " dreadful gulf of this monster ' s ( whale ' s ) mouth , are immediately lost a\n",
      " patient Job .\" -- RABELAIS . \" This whale ' s liver was two cartloads .\" -- ST\n",
      " Touching that monstrous bulk of the whale or ork we have received nothing cert\n",
      " of oil will be extracted out of one whale .\" -- IBID . \" HISTORY OF LIFE AND D\n",
      "ise .\" -- KING HENRY . \" Very like a whale .\" -- HAMLET . \" Which to secure , n\n",
      "restless paine , Like as the wounded whale to shore flies thro ' the maine .\" -\n",
      ". OF SPERMA CETI AND THE SPERMA CETI WHALE . VIDE HIS V . E . \" Like Spencer ' \n",
      "t had been a sprat in the mouth of a whale .\" -- PILGRIM ' S PROGRESS . \" That \n",
      "EN ' S ANNUS MIRABILIS . \" While the whale is floating at the stern of the ship\n",
      "e ship called The Jonas - in - the - Whale . ... Some say the whale can ' t ope\n",
      " in - the - Whale . ... Some say the whale can ' t open his mouth , but that is\n",
      " masts to see whether they can see a whale , for the first discoverer has a duc\n",
      " for his pains . ... I was told of a whale taken near Shetland , that had above\n",
      "oneers told me that he caught once a whale in Spitzbergen that was white all ov\n",
      "2 , one eighty feet in length of the whale - bone kind came in , which ( as I w\n",
      "n master and kill this Sperma - ceti whale , for I could never hear of any of t\n",
      " . 1729 . \"... and the breath of the whale is frequendy attended with such an i\n",
      "ed with hoops and armed with ribs of whale .\" -- RAPE OF THE LOCK . \" If we com\n",
      "contemptible in the comparison . The whale is doubtless the largest animal in c\n"
     ]
    }
   ],
   "source": [
    "text1.concordance(\"whale\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Displaying 25 of 33 matches:\n",
      "e nine hundred and thirty yea and he died . And Seth lived an hundred and five\n",
      "ne hundred and twelve years : and he died . And Enos lived ninety years , and \n",
      "nine hundred and five years : and he died . And Cainan lived seventy years and\n",
      " nine hundred and ten years : and he died . And Mahalaleel lived sixty and fiv\n",
      "t hundred ninety and five yea and he died . And Jared lived an hundred sixty a\n",
      "ine hundred sixty and two yea and he died . And Enoch lived sixty and five yea\n",
      "ne hundred sixty and nine yea and he died . And Lamech lived an hundred eighty\n",
      "hundred seventy and seven yea and he died . And Noah was five hundred years ol\n",
      "untains were covered . And all flesh died that moved upon the earth , both of \n",
      " , of all that was in the dry land , died . And every living substance was des\n",
      "ine hundred and fifty years : and he died . Now these are the generations of t\n",
      "an ; and Haran begat Lot . And Haran died before his father Terah in the land \n",
      "o hundred and five years : and Terah died in Haran . Now the LORD had said unt\n",
      "ars of the life of Sarah . And Sarah died in Kirjatharba ; the same is Hebron \n",
      "Then Abraham gave up the ghost , and died in a good old age , an old man , and\n",
      "ven yea and he gave up the ghost and died ; and was gathered unto his people .\n",
      " , as thou goest toward Assyr and he died in the presence of all his brethren \n",
      "ther . But Deborah Rebekah ' s nurse died , and she was buried beneath Bethel \n",
      "er soul was in departing , ( for she died ) that she called his name Beno but \n",
      "her called him Benjamin . And Rachel died , and was buried in the way to Ephra\n",
      " . And Isaac gave up the ghost , and died , and was gathered unto his people ,\n",
      " of his city was Dinhabah . And Bela died , and Jobab the son of Zerah of Bozr\n",
      "rah reigned in his stead . And Jobab died , and Husham of the land of Temani r\n",
      "ni reigned in his stead . And Husham died , and Hadad the son of Bedad , who s\n",
      "me of his city was Avith . And Hadad died , and Samlah of Masrekah reigned in \n"
     ]
    }
   ],
   "source": [
    "text3.concordance(\"died\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Displaying 11 of 11 matches:\n",
      "s eyes lol U20 = fiance Jerketts lmao wtf yah I know honey ! JOIN girl jerk kid\n",
      "rkZ~ lmao i was too U35 .. i was like wtf r you ? ahhh U23 ..... now i know you\n",
      "not white shoes ... bucks HALO U35 .. WTF ARE YOU TALKING ABOUT U35 ? hows u U3\n",
      "U41 :) U16 ? :) U19 lol hiya U52 JOIN wtf is a U16 ?? will you take over the ro\n",
      "N but oO U19 is hawt .. lets make out wtf is wrong with being 30 ? lol hey ! yo\n",
      " ago U110 ? really ? cool :-o i agree wtf is they talking about lol lol kawing \n",
      "ats sad no go boy no Reub .. for real wtf is this talk about elbows & knees !??\n",
      " swear . ACTION is a virgin . lol brb wtf is goin on !!! nm U91 give me a chanc\n",
      " PART * You 're not an IRC operator . Wtf . WTF so how are the girls in here to\n",
      "* You 're not an IRC operator . Wtf . WTF so how are the girls in here tonight \n",
      " wanna get dirty ? i want your cookie Wtf , man ok U67 get out uuuhhh get it he\n"
     ]
    }
   ],
   "source": [
    "text5.concordance(\"wtf\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Displaying 60 of 60 matches:\n",
      "00 taxable funds tracked * by IBC 's Money Fund Report eased a fraction of a pe\n",
      "*-1 Brenda Malizia Negus , editor of Money Fund Report , yields `` may blip up \n",
      "stors continue *-1 to pour cash into money funds . Assets of the 400 taxable fu\n",
      "go after the highest rates . The top money funds are currently yielding well ov\n",
      "t forces investors to redeploy their money at lower rates . Second , they chann\n",
      "heless , plenty of U.S. analysts and money managers are aghast at the lofty tra\n",
      "ll face legal obstacles to * raising money in the U.S. until they settle hundre\n",
      " in September . The goverment counts money as it is spent *-53 ; Dodge counts c\n",
      "*-54 *T*-1 . The government includes money spent * on residential renovation ; \n",
      "Japan . Despite the enormous sums of money 0 they 're paid *T*-1 *-2 to stand u\n",
      "aduate School of Business . Japanese money will help *-1 turn Southeast Asia in\n",
      "r hand , bring recognition and extra money -- a new computer lab for a school ,\n",
      "teaching as a career . She won grant money for the school , advised cheerleader\n",
      "e was eager *-1 to win -- if not for money , then for pride and recognition . M\n",
      "t . Ed Macheski , a Wilton , Conn. , money manager who *T*-120 follows bank sto\n",
      "hanical engineering productivity . @ Money Market Deposits-a 6.21 % a - Average\n",
      " Co . `` I think 0 the stock is dead money for a while . '' Yesterday 's announ\n",
      "firms that *T*-154 do n't spend much money *-1 advertising and ca n't be relied\n",
      "cheduled *-106 . Unless it can raise money in financial markets , Mr. Basham sa\n",
      " with the end of the year in sight , money managers are eager *-1 to take profi\n",
      "ideas , *-1 frequently putting their money behind projects that commercial bank\n",
      "tatement 0 *T*-1 to help in * saving money . In September , Union Planters Corp\n",
      "t , a Chicago investment adviser and money manager , based on a review of six d\n",
      "f Fujitsu Ltd. , believes `` 0 the ` money worship ' among young people ... cau\n",
      "-247 's wrong with * asking for more money ? Money is not everything , but it i\n",
      "wrong with * asking for more money ? Money is not everything , but it is necess\n",
      " believe 0 * working harder for less money is beautiful . I visited a lot of ma\n",
      "recently have been spending a lot of money on public relations and advertising \n",
      "ate on corporate loans at large U.S. money center commercial banks . FEDERAL FU\n",
      "New York Federal Reserve Bank . CALL MONEY : 9 3\\/4 % . The charge on loans to \n",
      "ropriations clause states that `` No Money shall be drawn *-51 from the Treasur\n",
      "retext of * protecting the public 's money . During the coming weeks , Presiden\n",
      "n fund clients with immense pools of money , and the traders at the fast-growin\n",
      "d -- the traditional , stock-picking money managers , tens of thousands of stoc\n",
      "t stake . Some , such as traditional money manager Neuberger & Berman , have ta\n",
      " highly profitable . Program trading money managers have gained control over a \n",
      " , and the pressures *ICH*-2 on such money managers * to produce consistent pro\n",
      "n't curbed *-1 . `` I do not want my money invested *-2 in what I consider *T*-\n",
      " , Foster Securities , a traditional money management firm . The program trader\n",
      ", the program-trading battle is over money , and the traditionalists have been \n",
      "ecent years . * Take the traditional money managers , or `` stock pickers , '' \n",
      "the S&P Not surprisingly , old-style money managers have been losing clients to\n",
      "bitrage is the problem . '' Too much money *ICH*-1 is at stake for program trad\n",
      "r S&P 500 widget in Chicago . If the money manager performing this service is b\n",
      "at a vast majority of fundamentalist money managers fail *-1 to beat the S&P 50\n",
      ". The loudest of these reformers are money managers who *T*-77 cater to smaller\n",
      "ints of performance on large sums of money quarter by quarter *PPA*-3 . Cost-ef\n",
      " '' Mr. Edwards argued 0 *T*-1 . Any money in excess of $ 40 million *U* collec\n",
      " is also fetching `` a great deal of money , '' says 0 *T*-1 Miles Barth of the\n",
      " in the 1987 crash when he lost more money last Oct. 13 *T*-2 . Now , he plans \n",
      "ivate Dodger Stadium -- brought more money *ICH*-1 into a city than it took out\n",
      "m boosters claim that without public money they would never be built *-1 . Miam\n",
      " political pharaohs , or let private money erect these playgrounds for public p\n",
      "ce long delays '' in * getting their money back , says 0 *T*-2 Jeffrey Bowman ,\n",
      "nking , where firms commit their own money *T*-1 , `` is getting riskier , and \n",
      ", '' said *T*-1 Kathleen Camilli , a money market economist at Drexel Burnham L\n",
      "ginally planned $ 500 million *U* as money managers and investors scrambled *-2\n",
      " , a Drexel industrial bond trader . Money managers ranked IBM 's offering as t\n",
      " that Coniston Partners , a New York money manager , has bought more than 5 % o\n",
      "e establishment *T*-2 , there is big money 0 *T*-3 to be made *-1 in * influenc\n"
     ]
    }
   ],
   "source": [
    "text7.concordance(\"money\", lines = 500)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Displaying 8 of 8 matches:\n",
      "cepted ? and if thou doest not well , sin lieth at the door . And unto thee sha\n",
      "Gomorrah is great , and because their sin is very grievous ; I will go down now\n",
      "ought on me and on my kingdom a great sin ? thou hast done deeds unto me that o\n",
      "an , What is my trespass ? what is my sin , that thou hast so hotly pursued aft\n",
      " can I do this great wickedness , and sin against God ? And it came to pass , a\n",
      "pake I not unto you , saying , Do not sin against the child ; and ye would not \n",
      "is torn in pieces ; and I saw him not sin And if ye take this also from me , an\n",
      " trespass of thy brethren , and their sin ; for they did unto thee ev and now ,\n"
     ]
    }
   ],
   "source": [
    "text3.concordance(\"sin\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Displaying 8 of 8 matches:\n",
      "menaces , by fraud or violence , by terror , intrigue , or venality , the Gove\n",
      "ameless , unreasoning , unjustified terror which paralyzes needed efforts to c\n",
      "ublic seemed frozen by a fatalistic terror , we proved that this is not true .\n",
      " to alter that uncertain balance of terror that stays the hand of mankind ' s \n",
      "eans freeing all Americans from the terror of runaway living costs . All must \n",
      "still . They fuel the fanaticism of terror . And they torment the lives of mil\n",
      "d maintain a strong defense against terror and destruction . Our children will\n",
      "k to advance their aims by inducing terror and slaughtering innocents , we say\n"
     ]
    }
   ],
   "source": [
    "text4.concordance(\"terror\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Displaying 2 of 2 matches:\n",
      "us names were soon to follow : Sir Lancelot the Brave ; Sir Gallahad the Pure \n",
      " - quite - so - brave - as - Sir - Lancelot , who had nearly fought the Dragon\n"
     ]
    }
   ],
   "source": [
    "text6.concordance(\"lancelot\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Displaying 23 of 23 matches:\n",
      "can get . JOIN PART who is he U6 ? i hate it when my devotion to christianity \n",
      "T U7 PART there is not ! heyy U148 i hate you . boys are naughtier U92 . JOIN \n",
      "ghtier U92 . JOIN bye U148 Hmm you I hate you say .. Guess what PART i hate yo\n",
      " I hate you say .. Guess what PART i hate you U121 fuck your ugly JOIN if i ha\n",
      "84 . ACTION sits with U92 . hmph . i hate you U68 . does that mean I want you \n",
      "on . If I was an ex prisoner would u hate me ? wb U18 what took forever ... th\n",
      "ol smile stop doin' it then U37 Do u hate me now yeah ... U37 I put it up for \n",
      "OIN . ACTION hates no one . Sure ill hate ya if ya want me to lmao I 'm not go\n",
      "n ? damn ... U41 .... that 's cool i hate paragraphs U16 .. I 'm ok , how are \n",
      "of you tried myspace for dating .. i hate to promoter other sites .. i hate ya\n",
      " i hate to promoter other sites .. i hate yahoo but now there is alternatives \n",
      " play games oh but not really JOIN i hate it . its so boring .. exactly . id r\n",
      "s / seconds . it 's my Music . Man i hate pop up adds . they keep blocking the\n",
      " U1 <---- U105 27 gaspppp LOL newp i hate whispers . ACTION sits back and watc\n",
      "ud ... the tongue oot PART lmao U5 i hate u this is a no pouting zone ... all \n",
      " she has always been so nice to me , hate to see her run off profiles lol hi J\n",
      " PART sugar i got Welcome , U114 ! i hate em all i do not descriminate PART wo\n",
      "know how it works .. but it does lol hate to tell y' all how long its been sin\n",
      " cat over that way U45 JOIN hiya U45 hate those things n ^ Hi U45 hi U46 boing\n",
      "mofo JOIN he 'll be here soon only i hate to admit it ... so i wont i know PAR\n",
      "ol . ACTION moves acros the room . i hate being honest JOIN PART Yeah , there \n",
      "eeeeeeeeeeeeeeeeeeeeeeeeeeeee PART I hate you , U122 . girls that dont mind ta\n",
      "Okay . Now . And I love you when you hate me . JOIN JOIN . ACTION slaps U122 a\n"
     ]
    }
   ],
   "source": [
    "text5.concordance(\"hate\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Displaying 25 of 207 matches:\n",
      " ] SOLDIER # 1 : Halt ! Who goes there ? ARTHUR : It is I , Arthur , son of Uth\n",
      "r lord and master . SOLDIER # 1 : What ? Ridden on a horse ? ARTHUR : Yes ! SOL\n",
      "SOLDIER # 1 : What ? Ridden on a horse ? ARTHUR : Yes ! SOLDIER # 1 : You ' re \n",
      "ou ' re using coconuts ! ARTHUR : What ? SOLDIER # 1 : You ' ve got two empty h\n",
      "e bangin ' ' em together . ARTHUR : So ? We have ridden since the snows of wint\n",
      "R # 1 : Where ' d you get the coconuts ? ARTHUR : We found them . SOLDIER # 1 :\n",
      " found them . SOLDIER # 1 : Found them ? In Mercea ? The coconut ' s tropical !\n",
      ". SOLDIER # 1 : Found them ? In Mercea ? The coconut ' s tropical ! ARTHUR : Wh\n",
      "s tropical ! ARTHUR : What do you mean ? SOLDIER # 1 : Well , this is a tempera\n",
      "et these are not strangers to our land ? SOLDIER # 1 : Are you suggesting cocon\n",
      " : Are you suggesting coconuts migrate ? ARTHUR : Not at all . They could be ca\n",
      " could be carried . SOLDIER # 1 : What ? A swallow carrying a coconut ? ARTHUR \n",
      " : What ? A swallow carrying a coconut ? ARTHUR : It could grip it by the husk \n",
      "rty - three times every second , right ? ARTHUR : Please ! SOLDIER # 1 : Am I r\n",
      "UR : Please ! SOLDIER # 1 : Am I right ? ARTHUR : I ' m not interested ! SOLDIE\n",
      "osing two swallows carried it together ? SOLDIER # 1 : No , they ' d have to ha\n",
      "held under the dorsal guiding feathers ? SOLDIER # 2 : Well , why not ? SCENE 2\n",
      "eathers ? SOLDIER # 2 : Well , why not ? SCENE 2 : [ thud ] [ clang ] CART - MA\n",
      " I ' m not dead ! CART - MASTER : What ? CUSTOMER : Nothing . Here ' s your nin\n",
      "I ' m not ! CART - MASTER : He isn ' t ? CUSTOMER : Well , he will be soon . He\n",
      "an you hang around a couple of minutes ? He won ' t be long . CART - MASTER : N\n",
      "OMER : Well , when ' s your next round ? CART - MASTER : Thursday . DEAD PERSON\n",
      "k , isn ' t there something you can do ? DEAD PERSON : [ singing ] I feel happy\n",
      "] [ clop clop clop ] Who ' s that then ? CART - MASTER : I dunno . Must be a ki\n",
      "unno . Must be a king . CUSTOMER : Why ? CART - MASTER : He hasn ' t got shit a\n"
     ]
    }
   ],
   "source": [
    "text6.concordance(\"?\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "true contemptible christian abundant few part mean careful puzzled\n",
      "mystifying passing curious loving wise doleful gamesome singular\n",
      "delightfully perilous fearless\n"
     ]
    }
   ],
   "source": [
    "text1.similar(\"monstrous\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "very so exceedingly heartily a as good great extremely remarkably\n",
      "sweet vast amazingly\n"
     ]
    }
   ],
   "source": [
    "text2.similar(\"monstrous\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "too lol good am in part hey join that and know sexy didnt it out from\n",
      "yet ok brb did\n"
     ]
    }
   ],
   "source": [
    "text5.similar(\"off\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "a_pretty am_glad a_lucky is_pretty be_glad\n"
     ]
    }
   ],
   "source": [
    "text2.common_contexts([\"monstrous\", \"very\"])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The underscore is replace by any of the words looked up. e.g.: a very pretty"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "i_it i_you i_to i_being you_me\n"
     ]
    }
   ],
   "source": [
    "text5.common_contexts([\"hate\", \"love\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "will_me\n"
     ]
    }
   ],
   "source": [
    "text3.common_contexts([\"kill\", \"love\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "the_is the_of the_0\n"
     ]
    }
   ],
   "source": [
    "text7.common_contexts([\"stock\", \"price\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x12dc866a0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "text4.dispersion_plot([\"citizens\", \"democracy\", \"freedom\", \"duties\", \"America\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\nM8s4MZiZWcaJwczMMk4MZmaWcWIwM7OME4OZmWWcGMzMLOPEYGZmGScGMzPLODGYmVnGicHMzDLr\nfWIYG1v9WLgwLx8ZqS9fuLCo66a1/tjY6rKFC2H27LystVz+WR6nPH5ruRpXO9XxJ6q6De36bcXb\nbsxOdeVxWu26ta+Lr1P71utWff2avB5lTeOqi6e1b9XVz57dfv+qrtfU2Bhsskn+vBx/dVvK+315\nvWqs5ZhHRtbcr+vWKb/fyuO1+igvl9u2tr01PwAbbJDvi+1ek1ZfUGzPyAhIMGPG6u2vxtpufyrH\n3oq3XX0nnfpv17bpe74fFBFTM1IfjY6Oxvj4eF/6kvLnreloUt5t6uratiuLyH9W1bXtJYbJvsyt\ncct91vXbbX66xdNuDppsZ3WOuvVfblO3fqe57mVe68Yqr9vr3Pb6WtaNVx6jU311vLq57fZaddu+\nuv29m3bvk3bjt1unui/U7R918Vf7qqvvpFP/7eZvsu9lScsiYrRJ265HDBIjEj+XOEPiBomzJTaV\nmC9xocQyifMktk7t3ypxpcRyiW9LbJrKt5L4bipfLrFPKn+txE8krpY4WWLDiW22mZn1Q9NTSTsC\nX4xgJ+Be4Ajg88ArI5gPnAp8LLX9TgR7RrA7cAPw5lT+OeDCVL4HcJ3ETsAhwL4RzAMeAQ6rC0DS\n4ZLGJY2vXLmy5w01M7NmZjRsd2sEl6Tl04EPAbsCF6TDmw2BO1L9rhL/BMwGZgLnpfIDgdcDRPAI\ncI/E64D5wJWpn0cDd9UFEBGnAKdAcSqpYdxmZtajpomh+kF8H3BdBHvXtF0CvCyC5RKLgIUd+hVw\nWgRHN4zDzMwGrGli2E5i7wguA14DXA68tVUmsRGwQwTXAZsDd6Syw4DbUh8/BN4BnJCuI8xMZd+T\n+GwEd0lsAWwewS3928TOFi9evbx0aV6+ZAksWrRm+dKlsGJF977nzi3WL1uwAK6+Go48cs0Yqj9b\n45TvRFmwII+jm/L2TUa5nwUL2t8dMXfumndSlXVatzxOq93Spc3uxCjH12mb587Nf3Zav/qzrNt2\ntOu79XzJkvr6WbNg3rz6/au6XlOLF8MnPpE/L89rdVta++3SpXD55Wv2VTVrVnG30KpV+X5dt07d\n+nPnFuvOnl08by1X3ztLlhR18+YVzyV49rNXx95uXym/DzfeGB7/eLjlFtgwXc1svafK8bWLubzc\n2ofKcTZ9vzXpvy6mJu/5fuh6V5LECHAuME5x2ud64HXADhTXDWZRJJgTIviSxDuA9wMrgSsoPugX\nSWxFcSroyRTXEt6RksohwNEU1zseAo6IoLI75vp5V5KZ2fqgl7uSmiaGcyLYtQ+x9YUTg5lZb/p6\nu6qZma1ful5jiGAFDM/RgpmZDZaPGMzMLOPEYGZmGScGMzPLODGYmVnGicHMzDJODGZmlnFiMDOz\njBODmZllnBjMzCzjxGBmZhknBjMzyzgxmJlZxonBzMwyTgxmZpZxYjAzs4wTg5mZZZwYzMws48Rg\nZmYZJwYzM8s4MZiZWWa9TgxjY83qFy5sXzcyAhLMnp3XjYwUZeUxRkaKvmbPLn6Oja3+WW7Xel5+\nNI27rn3TdXttW1ff2p7J2mST7n21tlVas227uSvXl9dpEnO1/6br1bUv71MjI2vuJ+202vYyx9X+\nW9u+ySbFo06vY9S1bTpH5bHq3gt1ber6qNtf6t5Hdf23e95red1nxUT7rqvvx3urCUXE1IzUA4kN\nI3ikXf3o6GiMj4/3Yxw6bX6rvq5dua6l1aZc1qm8qlO78vid4m6t26m+6UvedH56Gb+punnt1Kba\nttv61fom81Ju02nf6LRu3XrVOWvy+rbbrk7rdNs/O63TZIxO75Fu+1FrrHZzUW3Tbr+rxly3rXWv\nY6ft6KW822vXS9919b28f9fsR8siYrRJ274fMUi8T+JdafmzEj9KywdKnCHxzxLjEtdJHFtab4XE\ncRJXAa/qd1xmZtbMIE4lXQzsn5ZHgZkSG6Wyi4BjIhgFdgMWSOxWWvf3EewRwTernUo6XNK4pPGV\nK1cOIGwzM4PBJIZlwHyJxwB/AS6jSBD7UySNv09HBT8FdgF2Lq17ZrtOI+KUiBiNiNE5c+YMIGwz\nMwOY0e8OI3hI4mZgEXAp8DPgAGB74EHgKGDPCP4osQQoX/56oN/xmJlZb/qeGJKLKRLAm4BrgM9Q\nHEk8huLD/x6JrYAXAUsHFENXixc3q1+woH3d3Llwyy0wa1Zet2QJrFoFRx65unzu3OIOkauvhnnz\nijsYli5d806GpnH1WtekfrJ9LVjQ+c6MpjbeGPbaq3NfrfGPPXbNcZvEXp77JvNSbtNabjqf1fbl\nfWruXFi0KH/eTrVtE9V1Wtt++eXd422qrn3TOaqb1059tBur6XupyXid1ulUXvdZMdG+6+p7fV0m\n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\nrx9/FwAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x12eb06668>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "text4.dispersion_plot([\"good\", \"bad\", \"better\", \"worse\", \"peace\", \"war\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "44764"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(text3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['!',\n",
       " \"'\",\n",
       " '(',\n",
       " ')',\n",
       " ',',\n",
       " ',)',\n",
       " '.',\n",
       " '.)',\n",
       " ':',\n",
       " ';',\n",
       " ';)',\n",
       " '?',\n",
       " '?)',\n",
       " 'A',\n",
       " 'Abel',\n",
       " 'Abelmizraim',\n",
       " 'Abidah',\n",
       " 'Abide',\n",
       " 'Abimael',\n",
       " 'Abimelech',\n",
       " 'Abr',\n",
       " 'Abrah',\n",
       " 'Abraham',\n",
       " 'Abram',\n",
       " 'Accad',\n",
       " 'Achbor',\n",
       " 'Adah',\n",
       " 'Adam',\n",
       " 'Adbeel',\n",
       " 'Admah',\n",
       " 'Adullamite',\n",
       " 'After',\n",
       " 'Aholibamah',\n",
       " 'Ahuzzath',\n",
       " 'Ajah',\n",
       " 'Akan',\n",
       " 'All',\n",
       " 'Allonbachuth',\n",
       " 'Almighty',\n",
       " 'Almodad',\n",
       " 'Also',\n",
       " 'Alvah',\n",
       " 'Alvan',\n",
       " 'Am',\n",
       " 'Amal',\n",
       " 'Amalek',\n",
       " 'Amalekites',\n",
       " 'Ammon',\n",
       " 'Amorite',\n",
       " 'Amorites',\n",
       " 'Amraphel',\n",
       " 'An',\n",
       " 'Anah',\n",
       " 'Anamim',\n",
       " 'And',\n",
       " 'Aner',\n",
       " 'Angel',\n",
       " 'Appoint',\n",
       " 'Aram',\n",
       " 'Aran',\n",
       " 'Ararat',\n",
       " 'Arbah',\n",
       " 'Ard',\n",
       " 'Are',\n",
       " 'Areli',\n",
       " 'Arioch',\n",
       " 'Arise',\n",
       " 'Arkite',\n",
       " 'Arodi',\n",
       " 'Arphaxad',\n",
       " 'Art',\n",
       " 'Arvadite',\n",
       " 'As',\n",
       " 'Asenath',\n",
       " 'Ashbel',\n",
       " 'Asher',\n",
       " 'Ashkenaz',\n",
       " 'Ashteroth',\n",
       " 'Ask',\n",
       " 'Asshur',\n",
       " 'Asshurim',\n",
       " 'Assyr',\n",
       " 'Assyria',\n",
       " 'At',\n",
       " 'Atad',\n",
       " 'Avith',\n",
       " 'Baalhanan',\n",
       " 'Babel',\n",
       " 'Bashemath',\n",
       " 'Be',\n",
       " 'Because',\n",
       " 'Becher',\n",
       " 'Bedad',\n",
       " 'Beeri',\n",
       " 'Beerlahairoi',\n",
       " 'Beersheba',\n",
       " 'Behold',\n",
       " 'Bela',\n",
       " 'Belah',\n",
       " 'Benam',\n",
       " 'Benjamin',\n",
       " 'Beno',\n",
       " 'Beor',\n",
       " 'Bera',\n",
       " 'Bered',\n",
       " 'Beriah',\n",
       " 'Bethel',\n",
       " 'Bethlehem',\n",
       " 'Bethuel',\n",
       " 'Beware',\n",
       " 'Bilhah',\n",
       " 'Bilhan',\n",
       " 'Binding',\n",
       " 'Birsha',\n",
       " 'Bless',\n",
       " 'Blessed',\n",
       " 'Both',\n",
       " 'Bow',\n",
       " 'Bozrah',\n",
       " 'Bring',\n",
       " 'But',\n",
       " 'Buz',\n",
       " 'By',\n",
       " 'Cain',\n",
       " 'Cainan',\n",
       " 'Calah',\n",
       " 'Calneh',\n",
       " 'Can',\n",
       " 'Cana',\n",
       " 'Canaan',\n",
       " 'Canaanite',\n",
       " 'Canaanites',\n",
       " 'Canaanitish',\n",
       " 'Caphtorim',\n",
       " 'Carmi',\n",
       " 'Casluhim',\n",
       " 'Cast',\n",
       " 'Cause',\n",
       " 'Chaldees',\n",
       " 'Chedorlaomer',\n",
       " 'Cheran',\n",
       " 'Cherubims',\n",
       " 'Chesed',\n",
       " 'Chezib',\n",
       " 'Come',\n",
       " 'Cursed',\n",
       " 'Cush',\n",
       " 'Damascus',\n",
       " 'Dan',\n",
       " 'Day',\n",
       " 'Deborah',\n",
       " 'Dedan',\n",
       " 'Deliver',\n",
       " 'Diklah',\n",
       " 'Din',\n",
       " 'Dinah',\n",
       " 'Dinhabah',\n",
       " 'Discern',\n",
       " 'Dishan',\n",
       " 'Dishon',\n",
       " 'Do',\n",
       " 'Dodanim',\n",
       " 'Dothan',\n",
       " 'Drink',\n",
       " 'Duke',\n",
       " 'Dumah',\n",
       " 'Earth',\n",
       " 'Ebal',\n",
       " 'Eber',\n",
       " 'Edar',\n",
       " 'Eden',\n",
       " 'Edom',\n",
       " 'Edomites',\n",
       " 'Egy',\n",
       " 'Egypt',\n",
       " 'Egyptia',\n",
       " 'Egyptian',\n",
       " 'Egyptians',\n",
       " 'Ehi',\n",
       " 'Elah',\n",
       " 'Elam',\n",
       " 'Elbethel',\n",
       " 'Eldaah',\n",
       " 'EleloheIsrael',\n",
       " 'Eliezer',\n",
       " 'Eliphaz',\n",
       " 'Elishah',\n",
       " 'Ellasar',\n",
       " 'Elon',\n",
       " 'Elparan',\n",
       " 'Emins',\n",
       " 'En',\n",
       " 'Enmishpat',\n",
       " 'Eno',\n",
       " 'Enoch',\n",
       " 'Enos',\n",
       " 'Ephah',\n",
       " 'Epher',\n",
       " 'Ephra',\n",
       " 'Ephraim',\n",
       " 'Ephrath',\n",
       " 'Ephron',\n",
       " 'Er',\n",
       " 'Erech',\n",
       " 'Eri',\n",
       " 'Es',\n",
       " 'Esau',\n",
       " 'Escape',\n",
       " 'Esek',\n",
       " 'Eshban',\n",
       " 'Eshcol',\n",
       " 'Ethiopia',\n",
       " 'Euphrat',\n",
       " 'Euphrates',\n",
       " 'Eve',\n",
       " 'Even',\n",
       " 'Every',\n",
       " 'Except',\n",
       " 'Ezbon',\n",
       " 'Ezer',\n",
       " 'Fear',\n",
       " 'Feed',\n",
       " 'Fifteen',\n",
       " 'Fill',\n",
       " 'For',\n",
       " 'Forasmuch',\n",
       " 'Forgive',\n",
       " 'From',\n",
       " 'Fulfil',\n",
       " 'G',\n",
       " 'Gad',\n",
       " 'Gaham',\n",
       " 'Galeed',\n",
       " 'Gatam',\n",
       " 'Gather',\n",
       " 'Gaza',\n",
       " 'Gentiles',\n",
       " 'Gera',\n",
       " 'Gerar',\n",
       " 'Gershon',\n",
       " 'Get',\n",
       " 'Gether',\n",
       " 'Gihon',\n",
       " 'Gilead',\n",
       " 'Girgashites',\n",
       " 'Girgasite',\n",
       " 'Give',\n",
       " 'Go',\n",
       " 'God',\n",
       " 'Gomer',\n",
       " 'Gomorrah',\n",
       " 'Goshen',\n",
       " 'Guni',\n",
       " 'Hadad',\n",
       " 'Hadar',\n",
       " 'Hadoram',\n",
       " 'Hagar',\n",
       " 'Haggi',\n",
       " 'Hai',\n",
       " 'Ham',\n",
       " 'Hamathite',\n",
       " 'Hamor',\n",
       " 'Hamul',\n",
       " 'Hanoch',\n",
       " 'Happy',\n",
       " 'Haran',\n",
       " 'Hast',\n",
       " 'Haste',\n",
       " 'Have',\n",
       " 'Havilah',\n",
       " 'Hazarmaveth',\n",
       " 'Hazezontamar',\n",
       " 'Hazo',\n",
       " 'He',\n",
       " 'Hear',\n",
       " 'Heaven',\n",
       " 'Heber',\n",
       " 'Hebrew',\n",
       " 'Hebrews',\n",
       " 'Hebron',\n",
       " 'Hemam',\n",
       " 'Hemdan',\n",
       " 'Here',\n",
       " 'Hereby',\n",
       " 'Heth',\n",
       " 'Hezron',\n",
       " 'Hiddekel',\n",
       " 'Hinder',\n",
       " 'Hirah',\n",
       " 'His',\n",
       " 'Hitti',\n",
       " 'Hittite',\n",
       " 'Hittites',\n",
       " 'Hivite',\n",
       " 'Hobah',\n",
       " 'Hori',\n",
       " 'Horite',\n",
       " 'Horites',\n",
       " 'How',\n",
       " 'Hul',\n",
       " 'Huppim',\n",
       " 'Husham',\n",
       " 'Hushim',\n",
       " 'Huz',\n",
       " 'I',\n",
       " 'If',\n",
       " 'In',\n",
       " 'Irad',\n",
       " 'Iram',\n",
       " 'Is',\n",
       " 'Isa',\n",
       " 'Isaac',\n",
       " 'Iscah',\n",
       " 'Ishbak',\n",
       " 'Ishmael',\n",
       " 'Ishmeelites',\n",
       " 'Ishuah',\n",
       " 'Isra',\n",
       " 'Israel',\n",
       " 'Issachar',\n",
       " 'Isui',\n",
       " 'It',\n",
       " 'Ithran',\n",
       " 'Jaalam',\n",
       " 'Jabal',\n",
       " 'Jabbok',\n",
       " 'Jac',\n",
       " 'Jachin',\n",
       " 'Jacob',\n",
       " 'Jahleel',\n",
       " 'Jahzeel',\n",
       " 'Jamin',\n",
       " 'Japhe',\n",
       " 'Japheth',\n",
       " 'Jared',\n",
       " 'Javan',\n",
       " 'Jebusite',\n",
       " 'Jebusites',\n",
       " 'Jegarsahadutha',\n",
       " 'Jehovahjireh',\n",
       " 'Jemuel',\n",
       " 'Jerah',\n",
       " 'Jetheth',\n",
       " 'Jetur',\n",
       " 'Jeush',\n",
       " 'Jezer',\n",
       " 'Jidlaph',\n",
       " 'Jimnah',\n",
       " 'Job',\n",
       " 'Jobab',\n",
       " 'Jokshan',\n",
       " 'Joktan',\n",
       " 'Jordan',\n",
       " 'Joseph',\n",
       " 'Jubal',\n",
       " 'Judah',\n",
       " 'Judge',\n",
       " 'Judith',\n",
       " 'Kadesh',\n",
       " 'Kadmonites',\n",
       " 'Karnaim',\n",
       " 'Kedar',\n",
       " 'Kedemah',\n",
       " 'Kemuel',\n",
       " 'Kenaz',\n",
       " 'Kenites',\n",
       " 'Kenizzites',\n",
       " 'Keturah',\n",
       " 'Kiriathaim',\n",
       " 'Kirjatharba',\n",
       " 'Kittim',\n",
       " 'Know',\n",
       " 'Kohath',\n",
       " 'Kor',\n",
       " 'Korah',\n",
       " 'LO',\n",
       " 'LORD',\n",
       " 'Laban',\n",
       " 'Lahairoi',\n",
       " 'Lamech',\n",
       " 'Lasha',\n",
       " 'Lay',\n",
       " 'Leah',\n",
       " 'Lehabim',\n",
       " 'Lest',\n",
       " 'Let',\n",
       " 'Letushim',\n",
       " 'Leummim',\n",
       " 'Levi',\n",
       " 'Lie',\n",
       " 'Lift',\n",
       " 'Lo',\n",
       " 'Look',\n",
       " 'Lot',\n",
       " 'Lotan',\n",
       " 'Lud',\n",
       " 'Ludim',\n",
       " 'Luz',\n",
       " 'Maachah',\n",
       " 'Machir',\n",
       " 'Machpelah',\n",
       " 'Madai',\n",
       " 'Magdiel',\n",
       " 'Magog',\n",
       " 'Mahalaleel',\n",
       " 'Mahalath',\n",
       " 'Mahanaim',\n",
       " 'Make',\n",
       " 'Malchiel',\n",
       " 'Male',\n",
       " 'Mam',\n",
       " 'Mamre',\n",
       " 'Man',\n",
       " 'Manahath',\n",
       " 'Manass',\n",
       " 'Manasseh',\n",
       " 'Mash',\n",
       " 'Masrekah',\n",
       " 'Massa',\n",
       " 'Matred',\n",
       " 'Me',\n",
       " 'Medan',\n",
       " 'Mehetabel',\n",
       " 'Mehujael',\n",
       " 'Melchizedek',\n",
       " 'Merari',\n",
       " 'Mesha',\n",
       " 'Meshech',\n",
       " 'Mesopotamia',\n",
       " 'Methusa',\n",
       " 'Methusael',\n",
       " 'Methuselah',\n",
       " 'Mezahab',\n",
       " 'Mibsam',\n",
       " 'Mibzar',\n",
       " 'Midian',\n",
       " 'Midianites',\n",
       " 'Milcah',\n",
       " 'Mishma',\n",
       " 'Mizpah',\n",
       " 'Mizraim',\n",
       " 'Mizz',\n",
       " 'Moab',\n",
       " 'Moabites',\n",
       " 'Moreh',\n",
       " 'Moreover',\n",
       " 'Moriah',\n",
       " 'Muppim',\n",
       " 'My',\n",
       " 'Naamah',\n",
       " 'Naaman',\n",
       " 'Nahath',\n",
       " 'Nahor',\n",
       " 'Naphish',\n",
       " 'Naphtali',\n",
       " 'Naphtuhim',\n",
       " 'Nay',\n",
       " 'Nebajoth',\n",
       " 'Neither',\n",
       " 'Night',\n",
       " 'Nimrod',\n",
       " 'Nineveh',\n",
       " 'Noah',\n",
       " 'Nod',\n",
       " 'Not',\n",
       " 'Now',\n",
       " 'O',\n",
       " 'Obal',\n",
       " 'Of',\n",
       " 'Oh',\n",
       " 'Ohad',\n",
       " 'Omar',\n",
       " 'On',\n",
       " 'Onam',\n",
       " 'Onan',\n",
       " 'Only',\n",
       " 'Ophir',\n",
       " 'Our',\n",
       " 'Out',\n",
       " 'Padan',\n",
       " 'Padanaram',\n",
       " 'Paran',\n",
       " 'Pass',\n",
       " 'Pathrusim',\n",
       " 'Pau',\n",
       " 'Peace',\n",
       " 'Peleg',\n",
       " 'Peniel',\n",
       " 'Penuel',\n",
       " 'Peradventure',\n",
       " 'Perizzit',\n",
       " 'Perizzite',\n",
       " 'Perizzites',\n",
       " 'Phallu',\n",
       " 'Phara',\n",
       " 'Pharaoh',\n",
       " 'Pharez',\n",
       " 'Phichol',\n",
       " 'Philistim',\n",
       " 'Philistines',\n",
       " 'Phut',\n",
       " 'Phuvah',\n",
       " 'Pildash',\n",
       " 'Pinon',\n",
       " 'Pison',\n",
       " 'Potiphar',\n",
       " 'Potipherah',\n",
       " 'Put',\n",
       " 'Raamah',\n",
       " 'Rachel',\n",
       " 'Rameses',\n",
       " 'Rebek',\n",
       " 'Rebekah',\n",
       " 'Rehoboth',\n",
       " 'Remain',\n",
       " 'Rephaims',\n",
       " 'Resen',\n",
       " 'Return',\n",
       " 'Reu',\n",
       " 'Reub',\n",
       " 'Reuben',\n",
       " 'Reuel',\n",
       " 'Reumah',\n",
       " 'Riphath',\n",
       " 'Rosh',\n",
       " 'Sabtah',\n",
       " 'Sabtech',\n",
       " 'Said',\n",
       " 'Salah',\n",
       " 'Salem',\n",
       " 'Samlah',\n",
       " 'Sarah',\n",
       " 'Sarai',\n",
       " 'Saul',\n",
       " 'Save',\n",
       " 'Say',\n",
       " 'Se',\n",
       " 'Seba',\n",
       " 'See',\n",
       " 'Seeing',\n",
       " 'Seir',\n",
       " 'Sell',\n",
       " 'Send',\n",
       " 'Sephar',\n",
       " 'Serah',\n",
       " 'Sered',\n",
       " 'Serug',\n",
       " 'Set',\n",
       " 'Seth',\n",
       " 'Shalem',\n",
       " 'Shall',\n",
       " 'Shalt',\n",
       " 'Shammah',\n",
       " 'Shaul',\n",
       " 'Shaveh',\n",
       " 'She',\n",
       " 'Sheba',\n",
       " 'Shebah',\n",
       " 'Shechem',\n",
       " 'Shed',\n",
       " 'Shel',\n",
       " 'Shelah',\n",
       " 'Sheleph',\n",
       " 'Shem',\n",
       " 'Shemeber',\n",
       " 'Shepho',\n",
       " 'Shillem',\n",
       " 'Shiloh',\n",
       " 'Shimron',\n",
       " 'Shinab',\n",
       " 'Shinar',\n",
       " 'Shobal',\n",
       " 'Should',\n",
       " 'Shuah',\n",
       " 'Shuni',\n",
       " 'Shur',\n",
       " 'Sichem',\n",
       " 'Siddim',\n",
       " 'Sidon',\n",
       " 'Simeon',\n",
       " 'Sinite',\n",
       " 'Sitnah',\n",
       " 'Slay',\n",
       " 'So',\n",
       " 'Sod',\n",
       " 'Sodom',\n",
       " 'Sojourn',\n",
       " 'Some',\n",
       " 'Spake',\n",
       " 'Speak',\n",
       " 'Spirit',\n",
       " 'Stand',\n",
       " 'Succoth',\n",
       " 'Surely',\n",
       " 'Swear',\n",
       " 'Syrian',\n",
       " 'Take',\n",
       " 'Tamar',\n",
       " 'Tarshish',\n",
       " 'Tebah',\n",
       " 'Tell',\n",
       " 'Tema',\n",
       " 'Teman',\n",
       " 'Temani',\n",
       " 'Terah',\n",
       " 'Thahash',\n",
       " 'That',\n",
       " 'The',\n",
       " 'Then',\n",
       " 'There',\n",
       " 'Therefore',\n",
       " 'These',\n",
       " 'They',\n",
       " 'Thirty',\n",
       " 'This',\n",
       " 'Thorns',\n",
       " 'Thou',\n",
       " 'Thus',\n",
       " 'Thy',\n",
       " 'Tidal',\n",
       " 'Timna',\n",
       " 'Timnah',\n",
       " 'Timnath',\n",
       " 'Tiras',\n",
       " 'To',\n",
       " 'Togarmah',\n",
       " 'Tola',\n",
       " 'Tubal',\n",
       " 'Tubalcain',\n",
       " 'Twelve',\n",
       " 'Two',\n",
       " 'Unstable',\n",
       " 'Until',\n",
       " 'Unto',\n",
       " 'Up',\n",
       " 'Upon',\n",
       " 'Ur',\n",
       " 'Uz',\n",
       " 'Uzal',\n",
       " 'We',\n",
       " 'What',\n",
       " 'When',\n",
       " 'Whence',\n",
       " 'Where',\n",
       " 'Whereas',\n",
       " 'Wherefore',\n",
       " 'Which',\n",
       " 'While',\n",
       " 'Who',\n",
       " 'Whose',\n",
       " 'Whoso',\n",
       " 'Why',\n",
       " 'Wilt',\n",
       " 'With',\n",
       " 'Woman',\n",
       " 'Ye',\n",
       " 'Yea',\n",
       " 'Yet',\n",
       " 'Zaavan',\n",
       " 'Zaphnathpaaneah',\n",
       " 'Zar',\n",
       " 'Zarah',\n",
       " 'Zeboiim',\n",
       " 'Zeboim',\n",
       " 'Zebul',\n",
       " 'Zebulun',\n",
       " 'Zemarite',\n",
       " 'Zepho',\n",
       " 'Zerah',\n",
       " 'Zibeon',\n",
       " 'Zidon',\n",
       " 'Zillah',\n",
       " 'Zilpah',\n",
       " 'Zimran',\n",
       " 'Ziphion',\n",
       " 'Zo',\n",
       " 'Zoar',\n",
       " 'Zohar',\n",
       " 'Zuzims',\n",
       " 'a',\n",
       " 'abated',\n",
       " 'abide',\n",
       " 'able',\n",
       " 'abode',\n",
       " 'abomination',\n",
       " 'about',\n",
       " 'above',\n",
       " 'abroad',\n",
       " 'absent',\n",
       " 'abundantly',\n",
       " 'accept',\n",
       " 'accepted',\n",
       " 'according',\n",
       " 'acknowledged',\n",
       " 'activity',\n",
       " 'add',\n",
       " 'adder',\n",
       " 'afar',\n",
       " 'afflict',\n",
       " 'affliction',\n",
       " 'afraid',\n",
       " 'after',\n",
       " 'afterward',\n",
       " 'afterwards',\n",
       " 'aga',\n",
       " 'again',\n",
       " 'against',\n",
       " 'age',\n",
       " 'aileth',\n",
       " 'air',\n",
       " 'al',\n",
       " 'alive',\n",
       " 'all',\n",
       " 'almon',\n",
       " 'alo',\n",
       " 'alone',\n",
       " 'aloud',\n",
       " 'also',\n",
       " 'altar',\n",
       " 'altogether',\n",
       " 'always',\n",
       " 'am',\n",
       " 'among',\n",
       " 'amongst',\n",
       " 'an',\n",
       " 'and',\n",
       " 'angel',\n",
       " 'angels',\n",
       " 'anger',\n",
       " 'angry',\n",
       " 'anguish',\n",
       " 'anointedst',\n",
       " 'anoth',\n",
       " 'another',\n",
       " 'answer',\n",
       " 'answered',\n",
       " 'any',\n",
       " 'anything',\n",
       " 'appe',\n",
       " 'appear',\n",
       " 'appeared',\n",
       " 'appease',\n",
       " 'appoint',\n",
       " 'appointed',\n",
       " 'aprons',\n",
       " 'archer',\n",
       " 'archers',\n",
       " 'are',\n",
       " 'arise',\n",
       " 'ark',\n",
       " 'armed',\n",
       " 'arms',\n",
       " 'army',\n",
       " 'arose',\n",
       " 'arrayed',\n",
       " 'art',\n",
       " 'artificer',\n",
       " 'as',\n",
       " 'ascending',\n",
       " 'ash',\n",
       " 'ashamed',\n",
       " 'ask',\n",
       " 'asked',\n",
       " 'asketh',\n",
       " 'ass',\n",
       " 'assembly',\n",
       " 'asses',\n",
       " 'assigned',\n",
       " 'asswaged',\n",
       " 'at',\n",
       " 'attained',\n",
       " 'audience',\n",
       " 'avenged',\n",
       " 'aw',\n",
       " 'awaked',\n",
       " 'away',\n",
       " 'awoke',\n",
       " 'back',\n",
       " 'backward',\n",
       " 'bad',\n",
       " 'bade',\n",
       " 'badest',\n",
       " 'badne',\n",
       " 'bak',\n",
       " 'bake',\n",
       " 'bakemeats',\n",
       " 'baker',\n",
       " 'bakers',\n",
       " 'balm',\n",
       " 'bands',\n",
       " 'bank',\n",
       " 'bare',\n",
       " 'barr',\n",
       " 'barren',\n",
       " 'basket',\n",
       " 'baskets',\n",
       " 'battle',\n",
       " 'bdellium',\n",
       " 'be',\n",
       " 'bear',\n",
       " 'beari',\n",
       " 'bearing',\n",
       " 'beast',\n",
       " 'beasts',\n",
       " 'beautiful',\n",
       " 'became',\n",
       " 'because',\n",
       " 'become',\n",
       " 'bed',\n",
       " 'been',\n",
       " 'befall',\n",
       " 'befell',\n",
       " 'before',\n",
       " 'began',\n",
       " 'begat',\n",
       " 'beget',\n",
       " 'begettest',\n",
       " 'begin',\n",
       " 'beginning',\n",
       " 'begotten',\n",
       " 'beguiled',\n",
       " 'beheld',\n",
       " 'behind',\n",
       " 'behold',\n",
       " 'being',\n",
       " 'believed',\n",
       " 'belly',\n",
       " 'belong',\n",
       " 'beneath',\n",
       " 'bereaved',\n",
       " 'beside',\n",
       " 'besides',\n",
       " 'besought',\n",
       " 'best',\n",
       " 'betimes',\n",
       " 'better',\n",
       " 'between',\n",
       " 'betwixt',\n",
       " 'beyond',\n",
       " 'binding',\n",
       " 'bird',\n",
       " 'birds',\n",
       " 'birthday',\n",
       " 'birthright',\n",
       " 'biteth',\n",
       " 'bitter',\n",
       " 'blame',\n",
       " 'blameless',\n",
       " 'blasted',\n",
       " 'bless',\n",
       " 'blessed',\n",
       " 'blesseth',\n",
       " 'blessi',\n",
       " 'blessing',\n",
       " 'blessings',\n",
       " 'blindness',\n",
       " 'blood',\n",
       " 'blossoms',\n",
       " 'bodies',\n",
       " 'boldly',\n",
       " 'bondman',\n",
       " 'bondmen',\n",
       " 'bondwoman',\n",
       " 'bone',\n",
       " 'bones',\n",
       " 'book',\n",
       " 'booths',\n",
       " 'border',\n",
       " 'borders',\n",
       " 'born',\n",
       " 'bosom',\n",
       " 'both',\n",
       " 'bottle',\n",
       " 'bou',\n",
       " 'boug',\n",
       " 'bough',\n",
       " 'bought',\n",
       " 'bound',\n",
       " 'bow',\n",
       " 'bowed',\n",
       " 'bowels',\n",
       " 'bowing',\n",
       " 'boys',\n",
       " 'bracelets',\n",
       " 'branches',\n",
       " 'brass',\n",
       " 'bre',\n",
       " 'breach',\n",
       " 'bread',\n",
       " 'breadth',\n",
       " 'break',\n",
       " 'breaketh',\n",
       " 'breaking',\n",
       " 'breasts',\n",
       " 'breath',\n",
       " 'breathed',\n",
       " 'breed',\n",
       " 'brethren',\n",
       " 'brick',\n",
       " 'brimstone',\n",
       " 'bring',\n",
       " 'brink',\n",
       " 'broken',\n",
       " 'brook',\n",
       " 'broth',\n",
       " 'brother',\n",
       " 'brought',\n",
       " 'brown',\n",
       " 'bruise',\n",
       " 'budded',\n",
       " 'build',\n",
       " 'builded',\n",
       " 'built',\n",
       " 'bulls',\n",
       " 'bundle',\n",
       " 'bundles',\n",
       " 'burdens',\n",
       " 'buried',\n",
       " 'burn',\n",
       " 'burning',\n",
       " 'burnt',\n",
       " 'bury',\n",
       " 'buryingplace',\n",
       " 'business',\n",
       " 'but',\n",
       " 'butler',\n",
       " 'butlers',\n",
       " 'butlership',\n",
       " 'butter',\n",
       " 'buy',\n",
       " 'by',\n",
       " 'cakes',\n",
       " 'calf',\n",
       " 'call',\n",
       " 'called',\n",
       " 'came',\n",
       " 'camel',\n",
       " 'camels',\n",
       " 'camest',\n",
       " 'can',\n",
       " 'cannot',\n",
       " 'canst',\n",
       " 'captain',\n",
       " 'captive',\n",
       " 'captives',\n",
       " 'carcases',\n",
       " 'carried',\n",
       " 'carry',\n",
       " 'cast',\n",
       " 'castles',\n",
       " 'catt',\n",
       " 'cattle',\n",
       " 'caught',\n",
       " 'cause',\n",
       " 'caused',\n",
       " 'cave',\n",
       " 'cease',\n",
       " 'ceased',\n",
       " 'certain',\n",
       " 'certainly',\n",
       " 'chain',\n",
       " 'chamber',\n",
       " 'change',\n",
       " 'changed',\n",
       " 'changes',\n",
       " 'charge',\n",
       " 'charged',\n",
       " 'chariot',\n",
       " 'chariots',\n",
       " 'chesnut',\n",
       " 'chi',\n",
       " 'chief',\n",
       " 'child',\n",
       " 'childless',\n",
       " 'childr',\n",
       " 'children',\n",
       " 'chode',\n",
       " 'choice',\n",
       " 'chose',\n",
       " 'circumcis',\n",
       " 'circumcise',\n",
       " 'circumcised',\n",
       " 'citi',\n",
       " 'cities',\n",
       " 'city',\n",
       " 'clave',\n",
       " 'clean',\n",
       " 'clear',\n",
       " 'cleave',\n",
       " 'clo',\n",
       " 'closed',\n",
       " 'clothed',\n",
       " 'clothes',\n",
       " 'cloud',\n",
       " 'clusters',\n",
       " 'co',\n",
       " 'coat',\n",
       " 'coats',\n",
       " 'coffin',\n",
       " 'cold',\n",
       " ...]"
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sorted(set(text3))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2789"
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(set(text3))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "6.230453042623537"
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(set(text3)) / len(text3) * 100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5"
      ]
     },
     "execution_count": 88,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "text3.count(\"smote\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1.4643016433938312"
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "text4.count(\"a\") / len(text4) * 100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "6066"
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(set(text5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "704"
      ]
     },
     "execution_count": 97,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "text5.count(\"lol\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1.5640968673628082"
      ]
     },
     "execution_count": 93,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "text5.count(\"lol\") / len(text5) * 100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def lexical_diversity(text):\n",
    "    return len(set(text)) / len(text)\n",
    "\n",
    "def percentage(count, total):\n",
    "    return count / total * 100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.06230453042623537"
      ]
     },
     "execution_count": 103,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lexical_diversity(text3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1.4643016433938312"
      ]
     },
     "execution_count": 104,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "percentage(text4.count(\"a\"), len(text4))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[('And', 'CC'),\n",
       " ('now', 'RB'),\n",
       " ('for', 'IN'),\n",
       " ('something', 'NN'),\n",
       " ('complerely', 'RB'),\n",
       " ('different', 'JJ'),\n",
       " (',', ','),\n",
       " ('jg', 'NN'),\n",
       " ('and', 'CC'),\n",
       " ('buy', 'VB')]"
      ]
     },
     "execution_count": 123,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "text = word_tokenize(\"And now for something complerely different, jg and buy\")\n",
    "nltk.pos_tag(text)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "RB: adverb\n",
      "    occasionally unabatingly maddeningly adventurously professedly\n",
      "    stirringly prominently technologically magisterially predominately\n",
      "    swiftly fiscally pitilessly ...\n"
     ]
    }
   ],
   "source": [
    "nltk.help.upenn_tagset(\"RB\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[('They', 'PRP'),\n",
       " ('refuse', 'VBP'),\n",
       " ('to', 'TO'),\n",
       " ('permit', 'VB'),\n",
       " ('us', 'PRP'),\n",
       " ('to', 'TO'),\n",
       " ('obtain', 'VB'),\n",
       " ('the', 'DT'),\n",
       " ('refuse', 'NN'),\n",
       " ('permit', 'NN')]"
      ]
     },
     "execution_count": 115,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "text = word_tokenize(\"They refuse to permit us to obtain the refuse permit\")\n",
    "nltk.pos_tag(text)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [],
   "source": [
    "text = nltk.Text(word.lower() for word in nltk.corpus.brown.words())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "man time day year car moment world house family child country boy\n",
      "state job place way war girl work word\n"
     ]
    }
   ],
   "source": [
    "text.similar(\"woman\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "made said done put had seen found given left heard was been brought\n",
      "set got that took in told felt\n"
     ]
    }
   ],
   "source": [
    "text.similar(\"bought\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "in on to of and for with from at by that into as up out down through\n",
      "is all about\n"
     ]
    }
   ],
   "source": [
    "text.similar(\"over\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "a his this their its her an that our any all one these my in your no\n",
      "some other and\n"
     ]
    }
   ],
   "source": [
    "text.similar(\"the\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
